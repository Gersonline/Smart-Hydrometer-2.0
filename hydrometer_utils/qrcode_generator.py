'''
import qrcode documentation:
 https://pypi.org/project/qrcode/

Android and IOS Barcode Contents documentation:
 https://github.com/zxing/zxing/wiki/Barcode-Contents#wi-fi-network-config-android-ios-11

Conventer bmp2hex:
 https://github.com/robertgallup/python-bmp2hex
'''
import qrcode, os
from PIL import Image

qr = qrcode.QRCode(
    version=1,
    error_correction=qrcode.constants.ERROR_CORRECT_L,
    box_size=1,
    border=4,
)

qr.add_data('WIFI:T:WPA;S:TP-LINK_A2CE;P:07621895;;')
qr.make(fit=True)

img = qr.make_image(fill_color="black", back_color="white")
imgname = 'qrcode_access'
img.save(f'{imgname}.png', dpi=(128, 64))

#img = Image.open('qrcode_access.png').save('qrcode_access.bmp', dpi=(128, 64))
img = Image.open(f'{imgname}.png').resize((128, 64)).save(f'{imgname}.bmp')

os.system(f'python bmp2hex.py -w 16 -i {imgname}.bmp')

#bitmap no arduino
'''
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

#define SCREEN_WIDTH 128
#define SCREEN_HEIGHT 64

Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, -1);

static const uint8_t image_data_Saraarray[] = {

0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xfc, 0x00, 0x00, 0x03, 0xc7, 0xf0, 0x1f, 0xf8, 0x0f, 0xe3, 0xc0, 0x00, 0x00, 0x3f, 0xff,
0xff, 0xfc, 0x00, 0x00, 0x03, 0xc7, 0xf0, 0x1f, 0xf8, 0x0f, 0xe3, 0xc0, 0x00, 0x00, 0x3f, 0xff,
0xff, 0xfc, 0x7f, 0xff, 0xe3, 0xc0, 0x0e, 0x03, 0xf8, 0x0f, 0xe3, 0xc7, 0xff, 0xfe, 0x3f, 0xff,
0xff, 0xfc, 0x78, 0x01, 0xe3, 0xff, 0x00, 0x03, 0xc7, 0x80, 0x03, 0xc7, 0x80, 0x1e, 0x3f, 0xff,
0xff, 0xfc, 0x78, 0x01, 0xe3, 0xff, 0x00, 0x03, 0xc7, 0x80, 0x03, 0xc7, 0x80, 0x1e, 0x3f, 0xff,
0xff, 0xfc, 0x78, 0x01, 0xe3, 0xff, 0x0f, 0xe3, 0xf8, 0x70, 0xff, 0xc7, 0x80, 0x1e, 0x3f, 0xff,
0xff, 0xfc, 0x78, 0x01, 0xe3, 0xff, 0x0f, 0xe3, 0xf8, 0x70, 0xff, 0xc7, 0x80, 0x1e, 0x3f, 0xff,
0xff, 0xfc, 0x78, 0x01, 0xe3, 0xc0, 0x01, 0xff, 0xf8, 0x00, 0x1f, 0xc7, 0x80, 0x1e, 0x3f, 0xff,
0xff, 0xfc, 0x78, 0x01, 0xe3, 0xc0, 0x01, 0xff, 0xf8, 0x00, 0x1f, 0xc7, 0x80, 0x1e, 0x3f, 0xff,
0xff, 0xfc, 0x7f, 0xff, 0xe3, 0xc7, 0xf1, 0xe3, 0xf8, 0x0f, 0xe3, 0xc7, 0xff, 0xfe, 0x3f, 0xff,
0xff, 0xfc, 0x00, 0x00, 0x03, 0xc7, 0x0e, 0x1c, 0x38, 0x70, 0xe3, 0xc0, 0x00, 0x00, 0x3f, 0xff,
0xff, 0xfc, 0x00, 0x00, 0x03, 0xc7, 0x0e, 0x1c, 0x38, 0x70, 0xe3, 0xc0, 0x00, 0x00, 0x3f, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xc7, 0x00, 0x1c, 0x3f, 0xf0, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xc7, 0x00, 0x1c, 0x3f, 0xf0, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xfc, 0x00, 0xfe, 0x03, 0xc0, 0x0f, 0xe0, 0x3f, 0x8f, 0xfc, 0x00, 0x0f, 0xe0, 0x3f, 0xff,
0xff, 0xff, 0x80, 0x00, 0x1f, 0xf8, 0x0f, 0xe3, 0xc7, 0xff, 0xe0, 0x07, 0xff, 0x1f, 0xff, 0xff,
0xff, 0xff, 0x80, 0x00, 0x1f, 0xf8, 0x0f, 0xe3, 0xc7, 0xff, 0xe0, 0x07, 0xff, 0x1f, 0xff, 0xff,
0xff, 0xfc, 0x07, 0xf1, 0xe3, 0xff, 0xf1, 0xff, 0xc0, 0x0f, 0x1c, 0x3f, 0xff, 0x1e, 0x3f, 0xff,
0xff, 0xfc, 0x07, 0xf1, 0xe3, 0xff, 0xf1, 0xff, 0xc0, 0x0f, 0x1c, 0x3f, 0xff, 0x1e, 0x3f, 0xff,
0xff, 0xfc, 0x78, 0xfe, 0x1f, 0xc0, 0xff, 0xe3, 0xff, 0xf0, 0x1f, 0xc7, 0xff, 0xfe, 0x3f, 0xff,
0xff, 0xfc, 0x78, 0xfe, 0x1f, 0xc0, 0xff, 0xe3, 0xff, 0xf0, 0x1f, 0xc7, 0xff, 0xfe, 0x3f, 0xff,
0xff, 0xfc, 0x7f, 0x00, 0x03, 0xf8, 0xf0, 0x03, 0xff, 0xf0, 0xe3, 0xc7, 0x8f, 0xfe, 0x3f, 0xff,
0xff, 0xfc, 0x00, 0x00, 0x1c, 0x38, 0xfe, 0x1f, 0xc7, 0x80, 0xe0, 0x38, 0x7f, 0x1f, 0xff, 0xff,
0xff, 0xfc, 0x00, 0x00, 0x1c, 0x38, 0xfe, 0x1f, 0xc7, 0x80, 0xe0, 0x38, 0x7f, 0x1f, 0xff, 0xff,
0xff, 0xff, 0xf8, 0x01, 0xe3, 0xf8, 0x0e, 0x00, 0x07, 0xf0, 0x03, 0xc7, 0xf0, 0xfe, 0x3f, 0xff,
0xff, 0xff, 0xf8, 0x01, 0xe3, 0xf8, 0x0e, 0x00, 0x07, 0xf0, 0x03, 0xc7, 0xf0, 0xfe, 0x3f, 0xff,
0xff, 0xfc, 0x07, 0x0e, 0x1f, 0xc0, 0x00, 0x1c, 0x3f, 0xf0, 0x03, 0xff, 0x80, 0xe1, 0xff, 0xff,
0xff, 0xfc, 0x07, 0x0e, 0x1f, 0xc0, 0x00, 0x1c, 0x3f, 0xf0, 0x03, 0xff, 0x80, 0xe1, 0xff, 0xff,
0xff, 0xff, 0x80, 0x0f, 0xe0, 0x3f, 0x0f, 0xe0, 0x07, 0x8f, 0xe3, 0xc7, 0xff, 0x01, 0xff, 0xff,
0xff, 0xff, 0xff, 0x01, 0xfc, 0x00, 0x0f, 0xe0, 0x07, 0xf0, 0xe0, 0x3f, 0xf0, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0x01, 0xfc, 0x00, 0x0f, 0xe0, 0x07, 0xf0, 0xe0, 0x3f, 0xf0, 0xff, 0xff, 0xff,
0xff, 0xfc, 0x00, 0x01, 0xe3, 0xc7, 0xf1, 0xff, 0xc0, 0x00, 0x1c, 0x07, 0x80, 0x1e, 0x3f, 0xff,
0xff, 0xfc, 0x00, 0x01, 0xe3, 0xc7, 0xf1, 0xff, 0xc0, 0x00, 0x1c, 0x07, 0x80, 0x1e, 0x3f, 0xff,
0xff, 0xff, 0xf8, 0x00, 0x1c, 0x07, 0x0f, 0xe3, 0xc7, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x3f, 0xff,
0xff, 0xff, 0xf8, 0x00, 0x1c, 0x07, 0x0f, 0xe3, 0xc7, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x3f, 0xff,
0xff, 0xfc, 0x00, 0xfe, 0x00, 0x07, 0xf0, 0x03, 0xc7, 0xf0, 0xe0, 0x00, 0x0f, 0xfe, 0x3f, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x0e, 0x1f, 0xc7, 0x80, 0xe3, 0xff, 0x8f, 0x01, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x0e, 0x1f, 0xc7, 0x80, 0xe3, 0xff, 0x8f, 0x01, 0xff, 0xff,
0xff, 0xfc, 0x00, 0x00, 0x03, 0xf8, 0xfe, 0x00, 0x00, 0x70, 0x03, 0xc7, 0x80, 0xfe, 0x3f, 0xff,
0xff, 0xfc, 0x00, 0x00, 0x03, 0xf8, 0xfe, 0x00, 0x00, 0x70, 0x03, 0xc7, 0x80, 0xfe, 0x3f, 0xff,
0xff, 0xfc, 0x7f, 0xff, 0xe3, 0xc0, 0x00, 0x1c, 0x00, 0x7f, 0x03, 0xff, 0x80, 0xfe, 0x3f, 0xff,
0xff, 0xfc, 0x78, 0x01, 0xe3, 0xff, 0x0f, 0xe0, 0x07, 0xf0, 0x00, 0x00, 0x0f, 0x1e, 0x3f, 0xff,
0xff, 0xfc, 0x78, 0x01, 0xe3, 0xff, 0x0f, 0xe0, 0x07, 0xf0, 0x00, 0x00, 0x0f, 0x1e, 0x3f, 0xff,
0xff, 0xfc, 0x78, 0x01, 0xe3, 0xf8, 0xff, 0xe0, 0x07, 0xf0, 0xff, 0xff, 0xf0, 0xfe, 0x3f, 0xff,
0xff, 0xfc, 0x78, 0x01, 0xe3, 0xf8, 0xff, 0xe0, 0x07, 0xf0, 0xff, 0xff, 0xf0, 0xfe, 0x3f, 0xff,
0xff, 0xfc, 0x78, 0x01, 0xe3, 0xc0, 0x01, 0xff, 0xc7, 0x80, 0xfc, 0x3f, 0x8f, 0xe0, 0x3f, 0xff,
0xff, 0xfc, 0x78, 0x01, 0xe3, 0xc0, 0x01, 0xff, 0xc7, 0x80, 0xfc, 0x3f, 0x8f, 0xe0, 0x3f, 0xff,
0xff, 0xfc, 0x7f, 0xff, 0xe3, 0xc0, 0xff, 0xe3, 0xc0, 0x7f, 0xfc, 0x07, 0xf0, 0xff, 0xff, 0xff,
0xff, 0xfc, 0x00, 0x00, 0x03, 0xc7, 0xf0, 0x03, 0xc7, 0xf0, 0xe3, 0xc0, 0x0f, 0x1e, 0x3f, 0xff,
0xff, 0xfc, 0x00, 0x00, 0x03, 0xc7, 0xf0, 0x03, 0xc7, 0xf0, 0xe3, 0xc0, 0x0f, 0x1e, 0x3f, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};
void setup() {
  Serial.begin(115200);
 
  if(!display.begin(SSD1306_SWITCHCAPVCC, 0x3C)) {
    Serial.println(F("SSD1306 allocation failed"));
    for(;;);
  }
  
 
  // Clear the buffer.
  display.clearDisplay();
  
  // Draw bitmap on the screen
  display.drawBitmap(0, 0, image_data_Saraarray, 128, 64, 1);
  display.display();
  delay(10000); // Pause for 10 seconds
}
 
 int n = 0;
void loop() {
  display.clearDisplay();

  display.setTextColor(WHITE);
  display.setTextSize(1);

  display.setCursor(0,0);
  display.print("teste> "); 
  display.print(n);

  display.drawLine(0, 20, 128, 20, SSD1306_WHITE);

  display.display();
  n = n + 1;
  
}

'''



